import csv
import codecs
amenity_map = {
    'After School Care': 'Child Care',
    'childcare': 'Child Care',
    'playgroup': 'Child Care',
    'bar': 'Bars and Clubs',
    'biergarten': 'Bars and Clubs',
    'brothel': 'Bars and Clubs',
    'casino': 'Bars and Clubs',
    'club': 'Bars and Clubs',
    'gambling': 'Bars and Clubs',
    'karaoke_box': 'Bars and Clubs',
    'licensed_club': 'Bars and Clubs',
    'music_venue': 'Bars and Clubs',
    'pub': 'Bars and Clubs',
    'rsl': 'Bars and Clubs',
    'nightclub': 'Bars and Clubs',
    'arts_centre': 'Arts and Community Centres',
    'community_centre': 'Arts and Community Centres',
    'social_centre': 'Arts and Community Centres',
    'social_facility': 'Arts and Community Centres',
    'youth_centre': 'Arts and Community Centres',
    'scout_hut': 'Arts and Community Centres',
    'guide_hall': 'Arts and Community Centres', 
    'takeaway': 'Food and Dining',
    'take_away': 'Food and Dining',
    'restaurant': 'Food and Dining',
    'food_court': 'Food and Dining',
    'fast_food': 'Food and Dining',
    'cafe': 'Food and Dining',
    'ice_cream': 'Food and Dining',
    'vending_machine': 'Food and Dining',
    'internet_cafe': 'Food and Dining',
    'bus_station': 'Transport - Bus',
    'bus_terminal?': 'Transport - Bus',
    'ferry_terminal': 'Transport - Ferry',
    'taxi': 'Transport - Taxi',
    'car_rental': 'Car Rental',
    'car_wash': 'Car Wash',
    'fuel': 'Fuel',
    'compressed_air': 'Fuel',
    'RTA': 'Government',
    'parking': 'Parking',
    'parking_entrance': 'Parking',
    'parking_space': 'Parking',
    'motorcycle_parking': 'Parking',
    'bank': 'Bank',
    'atm': 'ATM / Currency Exchange',
    'bureau_de_change': 'ATM / Currency Exchange',
    'stock_exchange': 'ATM / Currency Exchange',
    'chiropractor': 'Medical',
    'clinic': 'Medical',
    'dentist': 'Medical',
    'dentist;doctor': 'Medical',
    'doctors':'Medical',
    'hospital': 'Hospital',
    'first_aid': 'Medical',
    'medical': 'Medical',
    'medical_centre': 'Medical',
    'pharmacy': 'Medical - Chemist',
    'podiatrist': 'Medical',
    'boat_rental': 'Boating and Water Activities',
    'boat_storage': 'Boating and Water Activities',
    'boatshed': 'Boating and Water Activities',
    'slipway': 'Boating and Water Activities',
    'marina': 'Boating and Water Activities',
    'dive_centre': 'Boating and Water Activities',
    'life_guard': 'Boating and Water Activities',
    'swimming_pool': 'Swimming Pool',
    'post_box': 'Postal Service',
    'post_office': 'Postal Service',
    'cinema': 'Cinemas / Theatres',
    'theatre': 'Cinemas / Theatres',
    'bicycle_parking': 'Push Bike',
    'bicycle_pump': 'Push Bike',
    'bicycle_rental': 'Push Bike',
    'bicycle_repair_station': 'Push Bike',
    'college': 'Eductation - Vocational',
    'kindergarten': 'Education - Kindergarten',
    'school': 'Education - School',
    'flight_school': 'Education - Vocational',
    'university': 'Education - Tertiary',
    'fitness_station': 'Fitness / Gym',
    'dojo': 'Fitness / Gym',
    'gym': 'Fitness / Gym',
    'library': 'Library',
    'local_government': 'Government',
    'courthouse': 'Court House',
    'police': 'Police',
    'fire_station': 'Fire Station',
    'prison': 'Prison',
    'retirement_home': 'Aged Care',
    'nursing_home': 'Aged Care',
    'aged_care': 'Aged Care',
    'grave_yard': 'Cemetery',
    'crematorium': 'Cemetery',
    'public_building': 'Government',
    'building': 'Government',
    'toilets': 'Public Amenities - Toilets',
    'shelter': 'Public Amenities - Shelters',
    'bbq': 'Public Amenities - BBQ',
    'bench': 'Public Amenities - Bench',
    'drinking_water': 'Public Amenities - Drinking Water',
    'water_point': 'Public Amenities - Drinking Water',
    'waste_basket': 'Public Amenities - Rubbish / Recycling',
    'waste_disposal': 'Public Amenities - Rubbish / Recycling',
    'recycling': 'Public Amenities - Rubbish / Recycling',
    'picnic_table': 'Public Amenities - Picnic Areas',
    'shower': 'Public Amenities - Shower',
    'townhall': 'Government',
    'hunting_stand': 'Boating and Water Activities',
    'shops': 'Retail / Markets',
    'marketplace': 'Retail / Markets',
    'wholesale_market': 'Retail / Markets',
    'telephone': 'Communications - Telephone',
    'telephone_exchange': 'Communications - Telephone',
    'veterinary': 'Animal - Veterinary',
    'animal minder': 'Animal - Boarding',
    'sign cnr Fairholm pointing north is Cotswold Avenue. Sign at southern end is Cotswold Road': 'Other',
    'reception_desk': 'Other',
    'studio': 'TV Studio',
    'embassy': 'Embassy',
    'clock': 'Landmark - Clock Tower',
    'fountain': 'Landmark - Water Fountain',
    'memorial': 'Landmark - Memorial',
    'archaeological_site': 'Landmark - Historic',
    'battlefield': 'Landmark - Historic',
    'castle': 'Landmark - Historic',
    'wreck': 'Landmark - Historic',
    'place_of_worship': 'Place of Worship',
    'golf_course': 'Sport Venues',
    'golf_driving_range': 'Sport Venues',
    'monument': 'Landmark - Memorial',
    'sports_centre': 'Sport Venues',
    'playground': 'Public Amenities - Play Grouund',
    'park': 'Public Amenities - Parks and Reserves',
    'nature_reserve': 'Public Amenities - Parks and Reserves',
    'reserve': 'Public Amenities - Parks and Reserves',
    'recreation_ground': 'Public Amenities - Parks and Reserves',
    'picnic_site': 'Public Amenities - Picnic Areas',
    'social_club': 'Arts and Community Centres',
    'stadium': 'Sport Venues',
    'pitch': 'Sport Venues',
    'practice_pitch': 'Sport Venues',
    'water_park': 'Boating and Water Activities',
    'paddling_pool': 'Swimming Pool',
    'National PArk': 'Public Amenities - Parks and Reserves',
    'Redfern AMS': 'Medical',
    'attraction': 'Attractions',
    'camp_site': 'Camp / Caravan Site',
    'caravan_site': 'Camp / Caravan Site',
    'museum': 'Attractions',
    'ruins': 'Landmark - Historic',
    'amusement_arcade': 'Attractions',
    'aquarium': 'Attractions',
    'artwork': 'Arts and Community Centres',
    'church': 'Place of Worship',
    'cricket nets': 'Sport Venues',
    'fitness_centre': 'Fitness / Gym',
    'exercise_point': 'Fitness / Gym',
    'dance': 'Fitness / Gym',
    'fort': 'Landmark - Historic',
    'cannon': 'Landmark - Historic',
    'heritage': 'Landmark - Historic',
    'gallery': 'Arts and Community Centres',
    'food_hall': 'Retail / Markets',
    'apartment': 'Accommodation',
    'guest_house': 'Accommodation',
    'hostel': 'Accommodation',
    'hotel': 'Accommodation',
    'house': 'Accommodation',
    'motel': 'Accommodation',
    'schoolyard': 'Education - School',
    'theme_park': 'Attractions',
    'miniature': 'Attractions',
    'viewpoint': 'Viewpoint / Lookout',
    'statue': 'Landmark - Memorial',
    'garden': 'Landmark - Garden',
    'zoo': 'Attractions',
    'ice_rink': 'Sport Venues',
    'skate_park': 'Public Amenities - Parks and Reserves',
    'former hospital': 'Medical',
    'fishing': 'Boating and Water Activities',
    'sailing': 'Boating and Water Activities',
    'bandstand': 'Other',
    'bird_hide': 'Other',
    'common': 'Other',
    'dog_park': 'Public Amenities - Parks and Reserves',
    'dog_park;park': 'Public Amenities - Parks and Reserves',
    'farm': 'Other',
    'information': 'Information Centres',
    'table_tennis_table': 'Other',
    'track': 'Other',
    'yes': 'Other',
    'no': 'Other',
    '770': 'Transport - Bus',
    'light_rail': 'Transport - Train',
    'buffer_stop': 'Transport - Train',
    'station': 'Transport - Train',
    'abandoned': 'Abandoned',
    'disused': 'Abandoned',
    'construction': 'Other',
    'platform': 'Transport - Train',
    'rail': 'Transport - Train',
    'level_crossing': 'Transport - Crossing',
    'crossing': 'Transport - Crossing',
    'stop': 'Transport - Bus',
    'subway_entrance': 'Transport - Train',
    'tram': 'Transport - Train',
    'tram_stop': 'Transport - Train',
    'turntable': 'Transport - Train',
    'lane': 'Transport - Bus',
    'designated': 'Transport - Crossing',
}


file_out = "data_amenity_map.csv"
with codecs.open(file_out, "w") as fo:
	writer = csv.writer(fo)
	for key, value in amenity_map.iteritems():
		row = [key, value]
		writer.writerow(row)
